Id: 0
Execution stack: 
(Ref(int) v|(New(v, 20)|(Ref(Ref(int)) a|(New(a, v)|(print(v)|print(a))))))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 0
Execution stack: 
Ref(int) v
(New(v, 20)|(Ref(Ref(int)) a|(New(a, v)|(print(v)|print(a)))))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 0
Execution stack: 
Ref(int) v
(New(v, 20)|(Ref(Ref(int)) a|(New(a, v)|(print(v)|print(a)))))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 0
Execution stack: 
(New(v, 20)|(Ref(Ref(int)) a|(New(a, v)|(print(v)|print(a)))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap memory:

Id: 0
Execution stack: 
(New(v, 20)|(Ref(Ref(int)) a|(New(a, v)|(print(v)|print(a)))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap memory:

Id: 0
Execution stack: 
New(v, 20)
(Ref(Ref(int)) a|(New(a, v)|(print(v)|print(a))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap memory:

Id: 0
Execution stack: 
New(v, 20)
(Ref(Ref(int)) a|(New(a, v)|(print(v)|print(a))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap memory:

Id: 0
Execution stack: 
(Ref(Ref(int)) a|(New(a, v)|(print(v)|print(a))))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Id: 0
Execution stack: 
(Ref(Ref(int)) a|(New(a, v)|(print(v)|print(a))))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Id: 0
Execution stack: 
Ref(Ref(int)) a
(New(a, v)|(print(v)|print(a)))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Id: 0
Execution stack: 
Ref(Ref(int)) a
(New(a, v)|(print(v)|print(a)))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Id: 0
Execution stack: 
(New(a, v)|(print(v)|print(a)))
Symbol table: 
a -> (0, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Id: 0
Execution stack: 
(New(a, v)|(print(v)|print(a)))
Symbol table: 
a -> (0, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Id: 0
Execution stack: 
New(a, v)
(print(v)|print(a))
Symbol table: 
a -> (0, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Id: 0
Execution stack: 
New(a, v)
(print(v)|print(a))
Symbol table: 
a -> (0, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Id: 0
Execution stack: 
(print(v)|print(a))
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> (1, int)

Id: 0
Execution stack: 
(print(v)|print(a))
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> (1, int)

Id: 0
Execution stack: 
print(v)
print(a)
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> (1, int)

Id: 0
Execution stack: 
print(v)
print(a)
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> (1, int)

Id: 0
Execution stack: 
print(a)
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
(1, int)
File table:
Heap memory:
1 -> 20
2 -> (1, int)

Id: 0
Execution stack: 
print(a)
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
(1, int)
File table:
Heap memory:
1 -> 20
2 -> (1, int)

Id: 0
Execution stack: 
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
(1, int)
(2, Ref(int))
File table:
Heap memory:
1 -> 20
2 -> (1, int)

Id: 0
Execution stack: 
(Ref(int) v|(New(v, 20)|(Ref(Ref(int)) a|(New(a, v)|(print(ReadHeap(v))|print(ReadHeap(ReadHeap(a)) + 5))))))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 0
Execution stack: 
Ref(int) v
(New(v, 20)|(Ref(Ref(int)) a|(New(a, v)|(print(ReadHeap(v))|print(ReadHeap(ReadHeap(a)) + 5)))))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 0
Execution stack: 
Ref(int) v
(New(v, 20)|(Ref(Ref(int)) a|(New(a, v)|(print(ReadHeap(v))|print(ReadHeap(ReadHeap(a)) + 5)))))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 0
Execution stack: 
(New(v, 20)|(Ref(Ref(int)) a|(New(a, v)|(print(ReadHeap(v))|print(ReadHeap(ReadHeap(a)) + 5)))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap memory:

Id: 0
Execution stack: 
(New(v, 20)|(Ref(Ref(int)) a|(New(a, v)|(print(ReadHeap(v))|print(ReadHeap(ReadHeap(a)) + 5)))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap memory:

Id: 0
Execution stack: 
New(v, 20)
(Ref(Ref(int)) a|(New(a, v)|(print(ReadHeap(v))|print(ReadHeap(ReadHeap(a)) + 5))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap memory:

Id: 0
Execution stack: 
New(v, 20)
(Ref(Ref(int)) a|(New(a, v)|(print(ReadHeap(v))|print(ReadHeap(ReadHeap(a)) + 5))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap memory:

Id: 0
Execution stack: 
(Ref(Ref(int)) a|(New(a, v)|(print(ReadHeap(v))|print(ReadHeap(ReadHeap(a)) + 5))))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Id: 0
Execution stack: 
(Ref(Ref(int)) a|(New(a, v)|(print(ReadHeap(v))|print(ReadHeap(ReadHeap(a)) + 5))))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Id: 0
Execution stack: 
Ref(Ref(int)) a
(New(a, v)|(print(ReadHeap(v))|print(ReadHeap(ReadHeap(a)) + 5)))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Id: 0
Execution stack: 
Ref(Ref(int)) a
(New(a, v)|(print(ReadHeap(v))|print(ReadHeap(ReadHeap(a)) + 5)))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Id: 0
Execution stack: 
(New(a, v)|(print(ReadHeap(v))|print(ReadHeap(ReadHeap(a)) + 5)))
Symbol table: 
a -> (0, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Id: 0
Execution stack: 
(New(a, v)|(print(ReadHeap(v))|print(ReadHeap(ReadHeap(a)) + 5)))
Symbol table: 
a -> (0, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Id: 0
Execution stack: 
New(a, v)
(print(ReadHeap(v))|print(ReadHeap(ReadHeap(a)) + 5))
Symbol table: 
a -> (0, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Id: 0
Execution stack: 
New(a, v)
(print(ReadHeap(v))|print(ReadHeap(ReadHeap(a)) + 5))
Symbol table: 
a -> (0, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20

Id: 0
Execution stack: 
(print(ReadHeap(v))|print(ReadHeap(ReadHeap(a)) + 5))
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> (1, int)

Id: 0
Execution stack: 
(print(ReadHeap(v))|print(ReadHeap(ReadHeap(a)) + 5))
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> (1, int)

Id: 0
Execution stack: 
print(ReadHeap(v))
print(ReadHeap(ReadHeap(a)) + 5)
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> (1, int)

Id: 0
Execution stack: 
print(ReadHeap(v))
print(ReadHeap(ReadHeap(a)) + 5)
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> 20
2 -> (1, int)

Id: 0
Execution stack: 
print(ReadHeap(ReadHeap(a)) + 5)
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
20
File table:
Heap memory:
1 -> 20
2 -> (1, int)

Id: 0
Execution stack: 
print(ReadHeap(ReadHeap(a)) + 5)
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
20
File table:
Heap memory:
1 -> 20
2 -> (1, int)

Id: 0
Execution stack: 
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
20
25
File table:
Heap memory:
1 -> 20
2 -> (1, int)

